name: Live build

# Based on https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release
on:
  release:
    types: [created]

env:
  DEBUG: false
  REF_CHECKOUT_BRANCH: master
  RELEASE_NAME: Recent nightly build
  APPLICATION_PUBLISH_FOLDER: ./publish
  WINDOWS_ARTIFACT_NAME: IL_2_Career_Toolset_windows_x64
  RELEASE_ARTIFACT_FOLDER: artifacts
  GH_TOKEN: ${{ github.token }}

jobs:
  check-build:
    name: Check and Test build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ env.REF_CHECKOUT_BRANCH }}
        lfs: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
  create-windows-build:
    name: Publish Windows build
    needs: ["check-build"]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ env.REF_CHECKOUT_BRANCH }}
        lfs: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Get release version
      run: |
         # Found at https://github.com/orgs/community/discussions/25713
         # Additional env fix found on https://github.com/actions/runner-images/issues/5251
         if ( '${{ GITHUB.REF_TYPE }}' -eq 'branch' ) {
             echo "BUILD_VERSION=0.0.0" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
           }
           else {
             echo "BUILD_VERSION=${{ GITHUB.REF_NAME }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
           }
    - name: Publish Application
      run: dotnet publish -r win-x64 -c Release -o ${{ env.APPLICATION_PUBLISH_FOLDER }} /p:Version=${{ env.BUILD_VERSION }}
    - name: Cleanup published build
      run: rm ${{ env.APPLICATION_PUBLISH_FOLDER }}\*.pdb
    - name: Show content for debug
      if: ${{ env.DEBUG == 'true' }}
      run: ls
    - name: Show content to publish
      if: ${{ env.DEBUG == 'true' }}
      run: |
        cd ./publish
        ls
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
       name: ${{ env.WINDOWS_ARTIFACT_NAME }}
       path: ${{ env.APPLICATION_PUBLISH_FOLDER }}
       if-no-files-found: error
  upload-release:
    name: Upload Artifacts to release
    needs: ["create-windows-build"]
    runs-on: ubuntu-latest
    steps:      
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.REF_CHECKOUT_BRANCH }}
          lfs: true
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with: 
          path: ${{ env.RELEASE_ARTIFACT_FOLDER }}
      - name: Zip Windows build
        run: |
          cd ./$RELEASE_ARTIFACT_FOLDER/$WINDOWS_ARTIFACT_NAME
          zip -r $WINDOWS_ARTIFACT_NAME.zip ./*
          mv $WINDOWS_ARTIFACT_NAME.zip ../
      - name: Display artifacts folder content
        if: ${{ env.DEBUG == 'true' }}
        run: ls -la $RELEASE_ARTIFACT_FOLDER
      - name: Upload artifacts
        if: ${{ env.DEBUG == 'false' }}
        run: |
          gh release upload ${{ GITHUB.GITHUB_REF }} ${{ env.RELEASE_ARTIFACT_FOLDER }}/*.zip